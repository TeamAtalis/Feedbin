name: CI

on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        ruby: [3.2]

    runs-on: ${{ matrix.os }}

    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          set -eux

          sudo apt-get update

          sudo apt-get install --quiet --yes \
          libffi-dev                         \
          libidn11-dev                       \
          libpq-dev                          \
          libreadline-dev                    \
          libssl-dev                         \
          libvips                            \
          libxml2-dev                        \
          libxslt1-dev                       \
          rustc                              \
          zlib1g-dev

          # Install chromedriver
          major_version=$(google-chrome --version | awk '{print $NF}' | awk --field-separator "." '{ print $1 }')
          chromedriver_version=$(curl "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${major_version}")
          wget --quiet "https://chromedriver.storage.googleapis.com/${chromedriver_version}/chromedriver_linux64.zip" --output-document /tmp/chromedriver.zip
          unzip /tmp/chromedriver.zip -d /tmp/
          sudo mv /tmp/chromedriver /usr/local/bin/

          # Install pigo
          wget --quiet --output-document - https://github.com/esimov/pigo/releases/download/v1.4.5/pigo-1.4.5-linux-amd64.tar.gz | tar --extract --gunzip --directory=/tmp/
          sudo mv /tmp/pigo-1.4.5-linux-amd64/pigo /usr/local/bin/

      - name: Configure sysctl limits for elasticsearch
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 8.5.0
          security-enabled: false

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install npm Dependencies
        run: npm install

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - name: Build and test with Rake
        env:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          POSTGRES_PASSWORD: postgres
          PGPASSWORD: postgres
          RAILS_ENV: test
          KINDLEGEN_PATH: /usr/local/bin/kindlegen
          RUBYOPT: "--yjit --yjit-exec-mem-size=1024"
        run: |
          ruby -v
          psql -c 'create database feedbin_test;' -U postgres
          bundle exec rake db:setup
          bundle exec rails test:system test

      - name: Lint JS
        run: npm run lint

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: screenshots ${{ matrix.os }}-${{ matrix.ruby }}
          path: tmp/screenshots
          if-no-files-found: ignore
